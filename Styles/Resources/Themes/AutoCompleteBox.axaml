<ResourceDictionary xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:Material.Styles.Converters;assembly=Material.Styles"
	xmlns:parameters="clr-namespace:Material.Styles.Converters.Parameters;assembly=Material.Styles"
	xmlns:assists="clr-namespace:AutoCompleteBoxPlay.Styles.Assists">
	
		  <converters:RectHollowClipConverter x:Key="RectangleHollowGeometry" />
		  <parameters:RectHollowClipParameter x:Key="OutlineTextBoxClippingParameter" Margin="8,0" Offset="4,-8" />

		  <ControlTheme x:Key="MaterialOutlineAutoCompleteBox" TargetType="AutoCompleteBox">
				
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="ClipToBounds" Value="False" />
				
				
				<Setter Property="BorderBrush" Value="{DynamicResource MaterialBodyBrush}" />
		    <Setter Property="Background" Value="Transparent" />
		    <Setter Property="FontFamily" Value="avares://Material.Styles/Fonts/Roboto#Roboto" />
		    <Setter Property="Padding" Value="16,8" />
		    <Setter Property="Template">
		      <ControlTemplate>
		        <StackPanel>
		          <Grid RowDefinitions="*, Auto">
		            <Grid Name="PART_RootBorder"
		                  HorizontalAlignment="Stretch"
		                  VerticalAlignment="Stretch"
		                  Background="Transparent"
		                  Margin="0,8,0,0"
		                  ClipToBounds="False">
		              <Border Name="PART_Border" CornerRadius="4"
		                      BorderThickness="{TemplateBinding BorderThickness}"
		                      BorderBrush="{TemplateBinding BorderBrush}">
		                <Border.Clip>
		                  <MultiBinding Converter="{StaticResource RectangleHollowGeometry}">
		                    <Binding ElementName="PART_Border" Path="Bounds" />
		                    <Binding ElementName="watermarkRoot" Path="Bounds" />
		                    <Binding ElementName="watermarkRoot" Path="RenderTransform" />
		                  </MultiBinding>
		                </Border.Clip>
		              </Border>
		              <Border Name="watermarkRoot"
		                      HorizontalAlignment="Left" VerticalAlignment="Top"
		                      RenderTransformOrigin="0, 0" Opacity="1">
		                <TextBlock Name="floatingWatermark" Classes="Subtitle1"
		                           HorizontalAlignment="Stretch" Margin="4,2"
		                           Foreground="{TemplateBinding BorderBrush}"
		                           Opacity="{Binding ElementName=PART_Border, Path=Opacity}"
		                           Text="{TemplateBinding (assists:AutoCompleteBoxAssist.Label)}" />
		              </Border>
		              <!-- <Grid ColumnDefinitions="*,Auto"> -->
		                
										<TextBox Name="PART_TextBox"
											Background="{TemplateBinding Background}"
											BorderThickness="0"
											Padding="{TemplateBinding Padding}"
											Margin="8,0,0,0"
											Watermark="{TemplateBinding Watermark}"
											DataValidationErrors.Errors="{TemplateBinding (DataValidationErrors.Errors)}"
										>
											<TextBox.InnerRightContent>
												<Border Name="splitBorder"
													Margin="16"
													HorizontalAlignment="Right"
													VerticalAlignment="Center"
													BorderBrush="Transparent"
													BorderThickness="0">
													<Path Name="arrow"
														Width="8" Height="8"
														Stretch="Uniform"
														HorizontalAlignment="Right"
														VerticalAlignment="Center"
														Data="M7,10L12,15L17,10H7Z"
														Fill="{DynamicResource MaterialTextBoxBorderBrush}" />
												</Border>
											</TextBox.InnerRightContent>
										</TextBox>
									
		              <!-- </Grid> -->
		            </Grid>
		          </Grid>
							
							<Popup Name="PART_Popup"
								MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								PlacementTarget="{TemplateBinding}"
								IsLightDismissEnabled="True">
								<Border BorderBrush="{DynamicResource MaterialTextAreaBorderBrush}"
									BorderThickness="1">
									<ListBox Name="PART_SelectingItemsControl"
										BorderThickness="0"
										Background="{DynamicResource MaterialPaperBrush}"
										Foreground="{TemplateBinding Foreground}"
										ItemTemplate="{TemplateBinding ItemTemplate}"
										ScrollViewer.HorizontalScrollBarVisibility="Auto"
										ScrollViewer.VerticalScrollBarVisibility="Auto" />
								</Border>
							</Popup>
							
		        </StackPanel>
		      </ControlTemplate>
		    </Setter>

		    <Style
		      Selector="^:not(.no-transitions) /template/ TextBlock#floatingWatermark,
		                ^:not(.no-transitions) /template/ Border#watermarkRoot">
		      <Setter Property="Transitions">
		        <Transitions>
		          <ThicknessTransition Duration="0:0:0.25" Property="Margin" Easing="CubicEaseOut" />
		          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
		        </Transitions>
		      </Setter>
		    </Style>

		    <Style Selector="^ /template/ Grid#PART_RootBorder">
		      <Setter Property="MinHeight" Value="52" />
		    </Style>

		    <Style
		      Selector="^:focus-within:not(AutoCompleteBox.Outline[SelectedItem=null]) /template/ Border#watermarkRoot,
		                ^:focus-within /template/ Border#watermarkRoot,
		                ^:not(AutoCompleteBox.Outline[SelectedItem=null]) /template/ Border#watermarkRoot">
		      <Setter Property="Margin" Value="14,-8,1,1" />
		      <Setter Property="RenderTransform" Value="scale(0.75)" />
		    </Style>

		    <Style Selector="^[SelectedItem=null]:not(:focus-within) /template/ Border#watermarkRoot">
		      <Setter Property="Margin" Value="10,14,1,1" />
		      <Setter Property="RenderTransform" Value="scale(1)" />
		    </Style>

		    <Style Selector="^">
		      <Setter Property="BorderThickness" Value="1" />
		    </Style>

		    <Style Selector="^:focus-within">
		      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryMidBrush}" />
		      <Setter Property="BorderThickness" Value="2" />
		    </Style>
		  </ControlTheme>
			
</ResourceDictionary>
